#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{color}

\definecolor{dkgreen}{rgb}{0,0.6,0}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{mauve}{rgb}{0.58,0,0.82}
\lstset{ %
  basicstyle=\footnotesize,       % the size of the fonts that are used for the code
  breakatwhitespace=false,        % sets if automatic breaks should only happen at whitespace
  breaklines=true,                % sets automatic line breaking
  captionpos=b,                   % sets the caption-position to bottom
  commentstyle=\color{dkgreen},   % comment style
  escapeinside={\%*}{*)},         % if you want to add LaTeX within your code
  keywordstyle=\color{blue},      % keyword style
  language=C,                     % the language of the code
  numbers=left,                   % where to put the line-numbers; possible values are (none, left, right)
  numberstyle=\tiny\color{gray},  % the style that is used for the line-numbers
  stringstyle=\color{mauve},      % string literal style
  tabsize=2,                      % sets default tabsize to 2 spaces
  xleftmargin=12pt          % left margin
}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\bottommargin 2cm
\headheight 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
RTDSP Lab 2
\end_layout

\begin_layout Author
Yong Wen Chua (ywc110)
\end_layout

\begin_layout Section
Questions
\end_layout

\begin_layout Subsection
Question 1
\end_layout

\begin_layout Standard
Consider the following table for the values generated by 
\family typewriter
sinegen()
\family default
:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Loop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sample
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\frac{\sqrt{2}}{2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\frac{\sqrt{2}}{2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $-\frac{\sqrt{2}}{2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $-\frac{\sqrt{2}}{2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
By inspection, it will take the loop 
\bar under
eight
\bar default
 times to generate one complete cycle.
 
\end_layout

\begin_layout Subsection
Question 2
\end_layout

\begin_layout Standard
The audio ports sample at 8 KHz, taking a sample every 125 
\begin_inset Formula $\mu s$
\end_inset

.
 Since it takes the loop eight times to complete a cycle, the audio ports
 will get a complete cycle every 
\begin_inset Formula $125\times8=1000\mu s$
\end_inset

.
 This translates to a 1 KHz sine wave being generated.
\end_layout

\begin_layout Standard
Thus, it is the sample rate of the audio port (via the blocking 
\family typewriter
while
\family default
 loops in the infinite 
\family typewriter
while
\family default
 loop in 
\family typewriter
main()
\family default
) that throttles the sine wave being generated at 1 KHz.
 
\end_layout

\begin_layout Subsection
Question 3
\end_layout

\begin_layout Standard
The samples are encoded as 32 bits integers to the audio port (via the 
\family typewriter
Int32
\family default
 cast in the code).
\end_layout

\begin_layout Section
Code
\end_layout

\begin_layout Subsection
Code Operation
\end_layout

\begin_layout Subsubsection
Sine Table Generation
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=C"
inline false
status open

\begin_layout Plain Layout

void sine_init(void){ 	
\end_layout

\begin_layout Plain Layout

	int i; 
\end_layout

\begin_layout Plain Layout

	for (i = 0; i < SINE_TABLE_SIZE; ++i) 				
\end_layout

\begin_layout Plain Layout

		table[i] = sin(i * (2*PI/SINE_TABLE_SIZE)); 	
\end_layout

\begin_layout Plain Layout

}	 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The function to generate the sine table uses a 
\family typewriter
for
\family default
 loop to loop around 
\family typewriter
SINE_TABLE_SIZE
\family default
 number of times to generate the value using the 
\family typewriter
sin()
\family default
 function.
 The phase is calculated at each iteration as shown.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Sine-Wave-Generation"

\end_inset

Sine Wave Generation
\end_layout

\begin_layout Standard
The 
\family typewriter
sinegen()
\family default
 function, by keeping track of the 
\begin_inset Quotes eld
\end_inset

phase
\begin_inset Quotes erd
\end_inset

 of the current wave, will return the value to allow for the generation
 of the sine wave in the appropriate frequency.
 It keeps track of the 
\begin_inset Quotes eld
\end_inset

phase
\begin_inset Quotes erd
\end_inset

 of the wave using a 
\family typewriter
static
\family default
 variable 
\family typewriter
index
\family default
.
 The static variables 
\family typewriter
prev_freq
\family default
 and 
\family typewriter
prev_sample
\family default
 are used top check for changes in those settings.
 If either are changed, the 
\family typewriter
index
\family default
 is reset to zero, and the values values described below will be recalculated.
\end_layout

\begin_layout Standard
The first value determines the number of samples necessary to generate the
 entire wave using the following line:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

double cycleSampleCount =  (double) sampling_freq / (double) sine_freq;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The number of entries in the sine table to skip each time a sample is required
 is then calculated using the line, along with an increment of the 
\family typewriter
index
\family default
:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=C"
inline false
status open

\begin_layout Plain Layout

double step = (double) SINE_TABLE_SIZE/(double) cycleSampleCount;
\end_layout

\begin_layout Plain Layout

//...
 other code ...
\end_layout

\begin_layout Plain Layout

index += step;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To ensure that we do not exceed the number of entries in the table and cause
 a segmentation fault, the following line will reset the index with the
 necessary offset for the next cycle to ensure a smoother wave and allows
 the generation of 
\begin_inset Quotes eld
\end_inset

odd
\begin_inset Quotes erd
\end_inset

 frequencies:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=C"
inline false
status open

\begin_layout Plain Layout

if ((int) index >=  SINE_TABLE_SIZE)	
\end_layout

\begin_layout Plain Layout

		index -= SINE_TABLE_SIZE;		
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Finally, the value will be retrieved from the table and returned.
 The 
\family typewriter
round()
\family default
 is necessary as the table only has discrete index.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=C"
inline false
status open

\begin_layout Plain Layout

return table[(int) round(index)];
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Increasing-the-Resolution"

\end_inset

Increasing the Resolution
\end_layout

\begin_layout Standard
There are two ways to increase the resolution.
\end_layout

\begin_layout Standard

\series bold
Firstly
\series default
: The 
\family typewriter
round()
\family default
 function used on the index in the code above will lead to 
\begin_inset Quotes eld
\end_inset

steps
\begin_inset Quotes erd
\end_inset

 in the wave generated, as will be described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Limitations"

\end_inset

.
 The resolution can be increased, without using a larger look-up table,
 by interpolating the values between the 
\begin_inset Quotes eld
\end_inset


\lang british
quantised
\lang english

\begin_inset Quotes erd
\end_inset

 indices of the look-up table.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $i$
\end_inset

 be the index we are trying to read from the table.
 
\begin_inset Formula $i$
\end_inset

 may, or may not be an integer.
 Let the function 
\begin_inset Formula $table(x)$
\end_inset

 return the value of the table at index 
\begin_inset Formula $x$
\end_inset

 where 
\begin_inset Formula $x\in\mathbb{Z}$
\end_inset

.
 Then the value 
\begin_inset Formula $v$
\end_inset

 to be returned from the table can be determined as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
v=table(\left\lfloor i\right\rfloor )+(i-\left\lfloor i\right\rfloor )\times[table(\left\lceil i\right\rceil )-table(\left\lfloor i\right\rfloor )]
\]

\end_inset


\end_layout

\begin_layout Standard
This is a linear interpolation between the two 
\begin_inset Quotes eld
\end_inset


\lang british
quantised
\lang english

\begin_inset Quotes erd
\end_inset

 indices of the 
\lang british
lookup
\lang english
 table.
 
\end_layout

\begin_layout Standard

\series bold
Secondly
\series default
: Since the values in the sine wave are basically the same in each quarter
 of a cycle, appropriate sign change can be used to get the necessary values.
 Thus, the code could be modified such that only the first quarter of the
 wave is stored in the sine look-up table.
 In this way, the resolution of the wave can be increased by four-fold.
 This technique is employed in the code listing in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Code-Listing"

\end_inset

 and controlled using the macro 
\family typewriter
INCREASE_RES
\family default
.
\end_layout

\begin_layout Standard
The sine table is first changed to generate only one quadrant of the wave:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

void sine_init(void){
\end_layout

\begin_layout Plain Layout

	int i; 
\end_layout

\begin_layout Plain Layout

	for (i = 0; i < SINE_TABLE_SIZE; ++i)
\end_layout

\begin_layout Plain Layout

        table[i] = sin(i * ( (2*PI) /(RES_MULTIPLIER*SINE_TABLE_SIZE)));
 
\end_layout

\begin_layout Plain Layout

}  
\end_layout

\end_inset

The macro 
\family typewriter
RES_MULTIPLIER
\family default
 is set to a value of '4'.
 The code operation in this version is the similar to what is described
 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Sine-Wave-Generation"

\end_inset

.
\end_layout

\begin_layout Standard
The only difference is that the index is allowed to go up to four times
 the size of 
\family typewriter
SINE_TABLE_SIZE
\family default
.
 Then the value is not read directly from the array, but by using a call
 to the function as given below:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

return sine_value((int) round(index));
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
sine_value
\family default
 function works by first determing the quadrant of a sine wave in which
 the index we want to retrieve is at, and also calculates the 
\begin_inset Quotes eld
\end_inset

progress
\begin_inset Quotes erd
\end_inset

 in that specific quadrant:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

int quadrant = index/SINE_TABLE_SIZE;  // the quadrant in which the cycle
 is in     
\end_layout

\begin_layout Plain Layout

int modulo = index % SINE_TABLE_SIZE;   // the modulo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Then, according to the quadrant the index is in, the appropriate value is
 read from the table array and adjusted accordingly.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

if (quadrant == 0)         
\end_layout

\begin_layout Plain Layout

	value = table[index];     
\end_layout

\begin_layout Plain Layout

else if (quadrant == 1)         
\end_layout

\begin_layout Plain Layout

	value =  table[SINE_TABLE_SIZE-modulo-1];     
\end_layout

\begin_layout Plain Layout

else if (quadrant == 2)         
\end_layout

\begin_layout Plain Layout

	value =  table[modulo]*-1;     
\end_layout

\begin_layout Plain Layout

else if (quadrant == 3)         
\end_layout

\begin_layout Plain Layout

	value =  table[SINE_TABLE_SIZE-modulo-1]*-1;	     
\end_layout

\begin_layout Plain Layout

else         
\end_layout

\begin_layout Plain Layout

	value =  0;
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Traces
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename 10.JPG

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Sampling frequency at 8 KHz; sine frequency at 10 Hz
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename 1k.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sampling frequency at 8 KHz; sine frequency at 1 KHz
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename 3k.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sampling frequency at 8 KHz; sine frequency at 3 KHz
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename 3.8k.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:AM"

\end_inset

Sampling frequency at 8 KHz; sine frequency at 3.8 KHz
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename 4k.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:nyquist"

\end_inset

Sampling frequency at 8 KHz; sine frequency at 4 KHz; flat line, as expected
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Limitations"

\end_inset

Limitations
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Smoothness"

\end_inset

Smoothness
\end_layout

\begin_layout Standard
Consider the number of samples required to generate the sine wave as explained
 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Sine-Wave-Generation"

\end_inset

 and let this be 
\begin_inset Formula $n$
\end_inset

.
 The smoothness of the wave generated will be at its best if 
\begin_inset Formula $n$
\end_inset

 is a factor of 
\family typewriter
SINE_TABLE_SIZE
\family default
.
 This is because the code described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Sine-Wave-Generation"

\end_inset

 will round the index 
\begin_inset Formula $i$
\end_inset

 to be generated to the nearest integer.
 Thus, it is possible that two 
\begin_inset Quotes eld
\end_inset

steps
\begin_inset Quotes erd
\end_inset

 of the wave generation will result in the same value being retrieved from
 the table, resulting in the 
\begin_inset Quotes eld
\end_inset

steps
\begin_inset Quotes erd
\end_inset

 seen in the output wave.
 If the methods described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Increasing-the-Resolution"

\end_inset

 is employed, then the wave would be smoother.
\end_layout

\begin_layout Subsubsection
Upper Frequency Bound
\end_layout

\begin_layout Standard
According to Nyquist Sampling Theory, the maximum frequency that can be
 generated would be half of the sampling frequency of the audio port.
 This is confirmed as it is observed that the DSP would generate 
\begin_inset Quotes eld
\end_inset

incorrect
\begin_inset Quotes erd
\end_inset

 frequencies when it is asked to generate frequencies above the Nyquist
 frequency as a result of aliasing.
 Sampling in time domain is essentially equivalent to duplicating the frequency
 spectrum contents.
 If the frequency of the wave generated is too high, this results in an
 overlap in the frequency domain, leading to signal corruption.
 If the frequency is set at exactly the Nyquist frequency, a flat wave (see
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:nyquist"

\end_inset

) would be generated as the table would be read at the start and the middle,
 which both have values of zero.
 
\end_layout

\begin_layout Standard
It should be noted that if the frequency change check used when resetting
 the index as described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Sine-Wave-Generation"

\end_inset

 is not implemented, a wave at exactly the Nyquist frequency can be generated.
 This is possible by exploiting the 
\begin_inset Quotes eld
\end_inset

stray
\begin_inset Quotes erd
\end_inset

 offsets left behind through the previous generation of waves in other frequenci
es.
 However, this causes an element of uncertainty in the wave generation (as
 it will depend on whatever has been generated before) and the frequency
 change check is implemented to remove this element of uncertainty.
 
\end_layout

\begin_layout Standard
As the frequency of the wave generated approaches the Nyquist frequency,
 the amplitude of the wave generated will oscillate (see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:AM"

\end_inset

).
 This is because of the non-ideal nature of the sine wave generated (as
 a result of the 
\begin_inset Quotes eld
\end_inset

steps
\begin_inset Quotes erd
\end_inset

 as described in
\size small
.
\size default

\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Smoothness"

\end_inset

).
 Thus, the wave would have frequency components other than the one we are
 trying to generate.
 This is equivalent to having an amplitude modulation in the time domain,
 resulting in what we can observe in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:AM"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Lower Frequency Bound
\end_layout

\begin_layout Standard
Theoretically, according to the implementation described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Sine-Wave-Generation"

\end_inset

 due to the use of 
\family typewriter
round()
\family default
 in the index of the table to be read, there should be no lower frequency
 bound of the wave that can be generated.
 A very low frequency will simply result in many samples required per wave,
 leading to the 
\begin_inset Quotes eld
\end_inset

steps
\begin_inset Quotes erd
\end_inset

 described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Smoothness"

\end_inset

, which can be mitigated by using the techniques described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Increasing-the-Resolution"

\end_inset

.
 It has been observed that a decent wave can be generated at 10 Hz and a
 wave is also generated at 1 Hz.
 However, the line out port attenuates the amplitude of lower frequencies
 (having a cut-off frequency of approximately 7.2 Hz by calculation from
 the 470
\begin_inset Formula $\mu F$
\end_inset

 capacitor and 47
\begin_inset Formula $k\Omega$
\end_inset

 resistor used), thus limiting the generation of sine waves at lower frequencies.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Code-Listing"

\end_inset

Code Listing
\end_layout

\begin_layout Standard

\size small
The code listing has some slight differences with the code described in
 previous sections due to the implementation of the resolution technique
 described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Increasing-the-Resolution"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "RTDSP/sine.c"
lstparams "xleftmargin=0pt"

\end_inset


\end_layout

\end_body
\end_document
