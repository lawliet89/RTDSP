#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{color}

\definecolor{dkgreen}{rgb}{0,0.6,0}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{mauve}{rgb}{0.58,0,0.82}
\lstset{ %
  basicstyle=\footnotesize,       % the size of the fonts that are used for the code
  breakatwhitespace=false,        % sets if automatic breaks should only happen at whitespace
  breaklines=true,                % sets automatic line breaking
  captionpos=b,                   % sets the caption-position to bottom
  commentstyle=\color{dkgreen},   % comment style
  escapeinside={\%*}{*)},         % if you want to add LaTeX within your code
  keywordstyle=\color{blue},      % keyword style
  language=C,                     % the language of the code
  numbers=left,                   % where to put the line-numbers; possible values are (none, left, right)
  numberstyle=\tiny\color{gray},  % the style that is used for the line-numbers
  stringstyle=\color{mauve},      % string literal style
  tabsize=2,                      % sets default tabsize to 2 spaces
  xleftmargin=12pt,          % left margin
  frame=leftline
}

\lfoot{ywc110 \& rs5010}
\cfoot{}
\rfoot{\thepage}

% for special page numbering
\pagenumbering{roman}

\setlength{\textfloatsep}{1ex plus 0.5ex minus 0.5ex}
\setlength{\intextsep}{1ex plus 0.5ex minus 0.5ex}
\end_preamble
\use_default_options true
\begin_modules
figs-within-sections
tabs-within-sections
eqs-within-sections
customHeadersFooters
fixltx2e
\end_modules
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf5
\output_sync 1
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue, bookmarks=false, pdfstartview={FitH}"
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 1.5cm
\bottommargin 2cm
\headheight 2cm
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Real Time Digital Signal Processing Speech Enhancement Project
\end_layout

\begin_layout Author
Yong Wen Chua (ywc110) & Ryan Savitski (rs5010)
\end_layout

\begin_layout Abstract
This report describes the implementation and analysis of a dynamic real-time
 noise filtering system, done primarily through spectral subtraction of
 estimated noise.
 It will describe and analyse a series of techniques to improve the filter
 performance, and conclude with the parameters and techniques used to implement
 the filter.
\end_layout

\begin_layout Section*
Declaration
\end_layout

\begin_layout Standard
Declaration: We confirm that this submission is our own work.
 In it, we give references and citations whenever we refer to or use the
 published, or unpublished, work of others.
 We are aware that this course is bound by penalties as set out in the College
 examination offences policy.
 
\end_layout

\begin_layout Standard
Signed:
\bar under
 Yong Wen Chua & Ryan Savitski
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic} 
\backslash
setcounter{page}{1}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
In this Digital Age, more communication are now happening over networks
 rather than in person.
 Driven primarily by telephony, this increase in prevalence of digital communica
tion has made the transmission of clear and noise-free sound more important
 than ever before.
 Implementations of such a system is complicated by the fact that the implemente
rs can never fully know what sort of noise environment users are in when
 they are speaking through the digital communication system.
 In addition, such a noise reduction system have to run in real-time, or
 users would not be able to communicate in real-time.
\end_layout

\begin_layout Standard
This project aims to implement such a noise-reduction system on various
 noise corrupted sound files in real-time.
 Various heuristics are first used to estimate the noise profile.
 Once estimated, spectral subtraction is used to 
\begin_inset Quotes eld
\end_inset

subtract
\begin_inset Quotes erd
\end_inset

 the noise spectrum to obtain a noise reduced version of the noise corrupted
 files.
 
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:sec-basic"

\end_inset

, we first explore a basic implementation of the noise filter.
 This will also establish the basic structure of the filtering system.
 In 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:sec-enhancement"

\end_inset

, various enhancements to the basic system are explored, along with details
 of the parameters used in those enhancements.
 Finally, in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Final-Implementation"

\end_inset

, the combination of the enhancements chosen to be used are described.
 The code for the project can be found in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Project-Code"

\end_inset

.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:sec-basic"

\end_inset

Basic Implementation
\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename resources/filter-flow.PNG
	lyxscale 35
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:fft-block"

\end_inset

Block diagram on the processing of the input signal to generate a filtered
 output.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename resources/frame-flow.PNG
	lyxscale 35
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:fame-overlap"

\end_inset

Block diagram on the overlapped processing of the frames.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Block diagrams of how the samples are processed.
 
\begin_inset CommandInset citation
LatexCommand citep
key "mitcherson"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset

Filtering of the noisy input signal is done primarily in the frequency domain.
 As shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:fft-block"

\end_inset

, the Fast Fourier Transform (FFT) algorithm is employed to perform a Discrete
 Fourier Transform (DFT) on the input signal.
 Then assuming that the noise is additive, the noise spectrum is estimated
 and subtracted from the noisy signal.
 Finally, an inverse DFT (IDFT) is performed on the input before sending
 it to the output.
\end_layout

\begin_layout Standard
Due to the real-time requirements of the system, it is not plausible to
 take a FFT of the entire noisy input.
 Thus, frames are passed through FFT and then processed accordingly.
 In order to prevent discontinuities at frame boundaries (which manifest
 as clicking sounds heard in the output), frames are processed in an overlapping
 manner, with appropriate windowing done on the frames so that the overall
 gain at the frame boundaries add up to unity.
 This process is illustrated in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:fame-overlap"

\end_inset

.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Frame-Processing-Implementation"

\end_inset

Frame Processing Implementation
\end_layout

\begin_layout Standard
A frame size of 256 samples was chosen for frame processing, and an oversampling
 ratio of four was chosen along the the square root of the Hamming Window.
 This ensures that there are no sharp discontinuities at frame edges and
 that the overall gain at the edges sum to unity.
 This means that a full frame is taken for frequency domain processing every
 
\begin_inset Formula $\nicefrac{1}{4}$
\end_inset

 of a frame, known as a frame segment.
 Each segment is thus 64 samples long.
 The processing is illustrated in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:overlap-frame"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename resources/frame-overlap.PNG
	lyxscale 30
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:overlap-frame"

\end_inset

Implementation of the overlapped frame processing.
 
\begin_inset CommandInset citation
LatexCommand citep
key "mitcherson"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The input and output buffer are implemented as circular buffers with five
 segments each.
 At any time, four of those input segments will be fully filled (and can
 be used for frame processing) with one being used to store the inputs coming
 into the system.
 At the same time, one of the output segments will have been fully added
 with its overlapped frame (and therefore ripe for output), while the other
 four frames are being added with the current processed frame.
 The inputs are read from the input port via an interrupt, and the relevant
 output is then sent to the output port.
 This results in a 1.25 frame latency from the input port to the output port.
 
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Noise-Spectrum-Estimation"

\end_inset

Noise Spectrum Estimation
\end_layout

\begin_layout Standard
The heuristics used in the estimation of noise assumes that within a 10
 second window, the speaker would have at least paused for a fraction of
 the time.
 During this time, the spectrum of the input would simply correspond to
 that of the noise spectrum.
 Thus, the minimum of the spectrum content over a ten-second sliding window
 can be used to estimate the noise spectrum.
 Due to the fact that the phase of the noise spectrum cannot be known, and
 the fact that slightly phase distortion is not audible to the human ears,
 only the absolute of the spectrum is analysed and processed.
\end_layout

\begin_layout Standard
In practice, however, it is not feasible to store ten seconds worth of spectra
 content.
 Four separate 2.5 seconds sliding windows are used in place of a full 10
 seconds sliding window.
 For 2.5 seconds, the lowest spectrum content is stored in a relevant buffer.
 After 2.5 seconds have passed, the oldest buffer is discarded and is used
 to store the minimum spectra content for the next 2.5 seconds.
 These four separate sliding windows are implemented as a single circular
 buffer, with the appropriate program logic to separate the segments.
 For the current window 
\begin_inset Formula $M_{i}(\omega)$
\end_inset

 (where 
\begin_inset Formula $i\in[1,4]$
\end_inset

 ) and an input spectrum of 
\begin_inset Formula $X(\omega)$
\end_inset

, 
\begin_inset Formula $M_{i}(\omega)=\min\left[|X(\omega)|,M_{i}(\omega)\right].$
\end_inset


\end_layout

\begin_layout Standard
When the noise spectrum is to be estimated for use in spectral subtraction,
 the minimum over the four 2.5 seconds segments are used.
 This essentially provides a ten second noise spectrum window that slides
 once every 2.5 seconds.
 The minimum is multiplied with a constant factor 
\begin_inset Formula $\alpha$
\end_inset

 to correct any underestimation.
 Thus, the minimum estimated noise spectrum 
\begin_inset Formula $N(\omega)$
\end_inset

 is given by 
\begin_inset Formula 
\begin{equation}
N(\omega)=\alpha\min_{i\in[1,4]}\left[M_{i}(\omega)\right]\label{eq:oversubtraction}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\alpha$
\end_inset

 was set to a value of 20.
\end_layout

\begin_layout Subsection
Noise Spectrum Subtraction
\end_layout

\begin_layout Standard
Let the output be 
\begin_inset Formula $Y(\omega)$
\end_inset

, and the input and noise be 
\begin_inset Formula $X(\omega)$
\end_inset

 and 
\begin_inset Formula $N(\omega)$
\end_inset

 respectively.
 To preserve the phase of 
\begin_inset Formula $X(\omega)$
\end_inset

 (and achieve a zero-phase filtering), only the magnitude should be altered,
 as mentioned before.
 Thus, the output is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat}{1}
|Y(\omega)| & =|X(\omega)|-|N(\omega)|=|X(\omega)|\left(1-\frac{|N(\omega)}{|X(\omega)|}\right)\label{eq:1}\\
Y(\omega) & =X(\omega)G(\omega)\\
G(\omega) & =\max\left(\lambda,1-\frac{|N(\omega)|}{|X(\omega)|}\right)\label{eq:g_w}
\end{alignat}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $G(\omega)$
\end_inset

 is a essentially a real-gain factor that is calculated from the estimated
 noise spectrum derived from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:1"

\end_inset

.
 Because of the fact that the expression 
\begin_inset Formula $1-\frac{|N(\omega)|}{|X(\omega)|}$
\end_inset

 can potentially go to negative, 
\begin_inset Formula $G(\omega)$
\end_inset

 should be lower bounded by a positive value 
\begin_inset Formula $\lambda$
\end_inset

.
 
\begin_inset Formula $\lambda$
\end_inset

 is chosen to be slightly above zero to reduce the amount of 
\begin_inset Quotes eld
\end_inset

musical noise
\begin_inset Quotes erd
\end_inset

 (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Musical-Noise"

\end_inset

) introduced by the spectral subtraction.
 In this implementation, 
\begin_inset Formula $\lambda$
\end_inset

 was chosen to be 0.05.
\end_layout

\begin_layout Subsection
Evaluation
\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename resources/spec-clean.png
	lyxscale 35
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:spec-clean"

\end_inset

Spectrogram of the clean file
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename resources/spec-factory2.png
	lyxscale 35
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:spec-factory2"

\end_inset

Spectrogram of 
\begin_inset Quotes eld
\end_inset

factory2
\begin_inset Quotes erd
\end_inset

 file
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Spectrograms of provided files, generated in Matlab
\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\noindent
Due to the fact that evaluating sound 
\begin_inset Quotes eld
\end_inset

cleanliness
\begin_inset Quotes erd
\end_inset

 has copious amounts of subjectivity, especially when dwelling into the
 minute details, we will use spectrograms to introduce some form of objectivity
 when evaluating the performance of the filter.
 We will use 
\begin_inset Quotes eld
\end_inset

factory2
\begin_inset Quotes erd
\end_inset

 for evaluation of the filter.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:spec-clean"

\end_inset

 shows the spectrogram of the provided clean sound file, and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:spec-factory2"

\end_inset

 shows the spectrogram of the 
\begin_inset Quotes eld
\end_inset

factory2
\begin_inset Quotes erd
\end_inset

 corrupted file.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Wrap figure
lines 12
placement O
overhang 0in
width "50col%"
status collapsed

\begin_layout Plain Layout
\noindent
\begin_inset Graphics
	filename resources/spec-no-enhancement.png
	lyxscale 21
	scale 21

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:spec-no-enhancement"

\end_inset

Spectrogram of the basic filtering of 
\begin_inset Quotes eld
\end_inset

factory2
\begin_inset Quotes erd
\end_inset

 at 8000 Hz sampling frequency.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
After applying the basic filter, the results can be seen in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:spec-no-enhancement"

\end_inset

.
 From listening tests, the basic implementation has managed to attenuate
 the background noise slightly, with darker areas seen in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:spec-no-enhancement"

\end_inset

 in between speech.
 The filter is slow in responding to background noise changes, especially
 when the noise level transits from a low level to a high level.
 This is due to the ten-second window used for noise estimation.
 In this case, the lower noise estimate will always 
\begin_inset Quotes eld
\end_inset

win
\begin_inset Quotes erd
\end_inset

 the noise estimation vote due to the algorithm.
 Due to the high over-subtraction factor 
\begin_inset Formula $\alpha$
\end_inset

 introduced in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:oversubtraction"

\end_inset

 to correct the underestimation of noise, some of the speech is also removed
 and results in the voice being slurry.
 An unnatural sounding 
\begin_inset Quotes eld
\end_inset

musical noise
\begin_inset Quotes erd
\end_inset

 has also been introduced.
\end_layout

\begin_layout Subsubsection*
\begin_inset CommandInset label
LatexCommand label
name "sub:Musical-Noise"

\end_inset

Musical Noise
\end_layout

\begin_layout Standard
The unnatural sounding musical noise is a result of the magnitude of the
 frequency exhibiting strong fluctuations in the noisy area 
\begin_inset CommandInset citation
LatexCommand citep
key "cappe"

\end_inset

.
 Referring to 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:spec-clean"

\end_inset

, it can be seen that the speech is paused between 11-12.5 s and the spectrogram
 is completely empty during those period.
 In the filtered version in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:spec-no-enhancement"

\end_inset

, it can be seen that there is noise during this period of time, and the
 magnitude of the frequency bins fluctuates very rapidly with time.
 This rapid fluctuation is a direct result of the minimum noise estimating
 algorithm.
 If the noise for a frequency bin goes low, even momentarily, its value
 will be taken as a minimum for that ten-second period and will be subtracted
 from the input.
 The 
\begin_inset Formula $\lambda$
\end_inset

 factor introduced in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:g_w"

\end_inset

 as the floor for the noise subtraction helps to reduce the amount of fluctuatio
n when the noise estimate goes from high to low.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:sec-enhancement"

\end_inset

Enhancements
\end_layout

\begin_layout Standard
Various enhancements are implemented, and evaluated for their effectiveness
 in removing the noise from the signal.
 Some of these enhancements improve the noise removal, while some exacerbate
 the noise.
 Each are thus evaluated in turn for their effectiveness, and a final combinatio
n of these enhancements are described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Final-Implementation"

\end_inset

.
 
\end_layout

\begin_layout Subsection
Structural Optimisation
\end_layout

\begin_layout Standard
The frequency spectrum processing can be sped up by slightly less than a
 factor of two simply by only processing the first half, plus one, of the
 frequency bins in the DFT.
 This is because the inputs to the DFT are real, and thus the DFT of the
 inputs will be complex conjugates about the middle.
 For our frame size of 256, where 
\begin_inset Formula $X_{k}$
\end_inset

 denotes the 
\begin_inset Formula $k$
\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
th
\end_layout

\end_inset

 frequency bin, 
\begin_inset Formula $X_{256-i}=X_{-i}=X_{i}^{*}$
\end_inset

 for 
\begin_inset Formula $i\in[1,127]$
\end_inset

, and 
\begin_inset Formula $X_{0}$
\end_inset

 and 
\begin_inset Formula $X_{128}$
\end_inset

 are simply real-valued.
 This also allows some of the buffers used in the enhancements described
 below to be almost halved in size.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Low-Pass-Filter-Input"

\end_inset

Low-Pass Filter Input for Noise Estimation
\end_layout

\begin_layout Standard
\noindent
\begin_inset Wrap figure
lines 12
placement O
overhang 0in
width "50col%"
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename resources/spec-enhancement-2.png
	lyxscale 21
	scale 21

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:spec-enhancement-2"

\end_inset

Spectrogram of the filtering with the low-pass filter input for noise estimation
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
The noise estimate 
\begin_inset Formula $P_{t}(\omega)$
\end_inset

 for a frame 
\begin_inset Formula $t$
\end_inset

 can be put through a low-pass filter (LPF) to moderate the effects of a
 sharp drop in the noise estimation.
 The filtering can be done according to 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
P_{t}(\omega) & = & (1-k)\times|X(\omega)|+k\times P_{t-1}(\omega)\label{eq:lpf-input}\\
k & = & e^{(-\nicefrac{T}{\tau})}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $T$
\end_inset

 is the frame rate (the time between frame calculation), and 
\begin_inset Formula $\tau$
\end_inset

 is the time constant parameter for this filter.
 The result of the filtering can be seen in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:spec-enhancement-2"

\end_inset

.
 Alternatively, LPF can also be done in power, rather than in magnitude:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
P_{t}(\omega)=\sqrt{(1-k)\times|X(\omega)|^{2}+k\times\left[P_{t-1}(\omega)\right]^{2}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
===========
\end_layout

\begin_layout Subsubsection
Magnitude domain
\end_layout

\begin_layout Standard
The problem with the above approach is that each frame's FFT is considered
 alone when estimating noise.
 
\end_layout

\begin_layout Standard
Hence:
\end_layout

\begin_layout Standard
<NB: see above, some stuff already covered>
\end_layout

\begin_layout Standard
if a particular noise frequency is not very pronounced in one frame (i.e.
 it's bin magnitude is low), it becomes the lowest noise estimate for that
 particular frequency for the duration of the noise estimation period.
 Noting that a frame length at 256 point FFT at 8 kHz sampling rate is 32
 ms, whereas one particularly overestimated noise value will stay within
 the minimum noise buffer for a period that can last seconds.
\end_layout

\begin_layout Standard
This underestimation of the noise can be counteracted slightly via an over
 subtraction factor 
\begin_inset Formula $\alpha$
\end_inset

.
\end_layout

\begin_layout Standard
<elaborate on alpha values>
\end_layout

\begin_layout Standard
Noise with very minimal pauses would defeat this kind of filtering easily,
 bringing the spectral subtraction component close to nothing.
\end_layout

\begin_layout Standard
a particularly small bin value in one frame will affect the filtering of
 that frequency while the noise estimate stays in the noise minimum buffer
 (the noise estimation period, which is usually in the range of seconds).
\end_layout

\begin_layout Standard
<throw in Burouti paper for alpha/beta values>
\end_layout

\begin_layout Standard
========================
\end_layout

\begin_layout Standard
Therefore to fix the above issue, LPF of frequency bins is used for 
\end_layout

\begin_layout Standard
+ smoothes transitions between noise estimations, i.e.
 the filter with track the noise front in a smoother fashion.
 This is also a downside theoretically, but in practice works well.
\end_layout

\begin_layout Standard
+ goodgoodgood - main improvement -> LPF lets us pick out the persistent
 noise
\end_layout

\begin_layout Standard
+ we can take advantage of the entire pause between speech segments and
 average the noise content over it, therefore getting a close estimate of
 the mean of the persistent noise -> alpha can be lowered
\end_layout

\begin_layout Standard
+ show spectrograms and explain what it shows
\end_layout

\begin_layout Standard
+ not affected by individual frame FFTs underestimating the true noise content
 for a long time
\end_layout

\begin_layout Standard
change in alpha from 20 to 3.2
\end_layout

\begin_layout Standard
<tau values, what it affects, what we chose>
\end_layout

\begin_layout Standard
<spectrograms of no lpf vs lpf to show correct averaging>
\end_layout

\begin_layout Standard
---------------------------------------------------
\end_layout

\begin_layout Subsubsection
Power domain
\end_layout

\begin_layout Standard
tried:
\end_layout

\begin_layout Standard
y = x - sqrt(d^2) 
\end_layout

\begin_layout Standard
proposing, but no perceivable difference, also quote vankirk:
\end_layout

\begin_layout Standard
y^2 = (x^2 - d^2)
\end_layout

\begin_layout Subsection
Low-Pass Filter Noise Estimate
\end_layout

\begin_layout Standard
remove discontinuities due to sudden changes in noise level estimate introduced
 by rotating the buffers.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:alt-gw"

\end_inset

Alternate Calculation for 
\begin_inset Formula $G(\omega)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
adaptive noise floor level based on SNR
\end_layout

\begin_layout Plain Layout
1 - n/p 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 11
placement O
overhang 0in
width "50col%"
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename resources/spec-enhancement-2-4.png
	lyxscale 21
	scale 21

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:spec-enhancement6"

\end_inset

Spectrogram using an alternate calculation for 
\begin_inset Formula $G(\omega)$
\end_inset

, combined with input LPF for noise estimation
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

The nature of the noise estimation algorithm is such that a lower noise
 estimate (even momentarily) will cause an underestimate of the noise spectrum.
 While this effect is moderated partly by the LPF in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Low-Pass-Filter-Input"

\end_inset

, it still does not handle situations where the noise level increases.
 Consider that the factor 
\begin_inset Formula $G(\omega)$
\end_inset

 derived in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:g_w"

\end_inset

 can be calculated using another form to perform noise subtraction form
 the input 
\begin_inset Formula $X(\omega)$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat}{1}
\left|Y(\omega)\right| & =\left|X(\omega)\right|-|X(\omega)|\frac{\left|N(\omega)\right|}{\left|P(\omega)\right|}\label{eq:eq2}\\
 & =\left|X(\omega)\right|\left(1-\frac{\left|N(\omega)\right|}{\left|P(\omega)\right|}\right)\nonumber \\
\therefore G(\omega) & =\max\left[\lambda,1-\frac{\left|N(\omega)\right|}{\left|P(\omega)\right|}\right]\label{eq:enhancement-4}
\end{alignat}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $|N(\omega)|$
\end_inset

 is the current minimum noise estimate over ten seconds from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:oversubtraction"

\end_inset

, and 
\begin_inset Formula $|P(\omega)|$
\end_inset

 is the low-pass filtered noise estimate for the current frame being processed
 from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:lpf-input"

\end_inset

.
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:eq2"

\end_inset

 gives rise to different effects depending on the values of 
\begin_inset Formula $|N(\omega)|$
\end_inset

 and 
\begin_inset Formula $|P(\omega)|$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Noise Level Matches Minimum Estimate
\end_layout

\begin_layout Standard
Consider a situation when the value of 
\begin_inset Formula $|N(\omega)|$
\end_inset

 is equal, or slightly more than
\begin_inset Formula $|P(\omega)|$
\end_inset

.
 This will signify that the current minim noise estimate over ten seconds
 roughly matches the low-pass filtered noise estimate for the current frame
 being processed.
 We are thus able to be fairly confident that the input 
\begin_inset Formula $X(\omega)$
\end_inset

 consists entirely of only noise.
 Thus, the fraction 
\begin_inset Formula $\frac{\left|N(\omega)\right|}{\left|P(\omega)\right|}\approx1$
\end_inset

 and the entirety of 
\begin_inset Formula $X(\omega)$
\end_inset

 will be subtracted.
\end_layout

\begin_layout Subsubsection
Noise Level Increase
\end_layout

\begin_layout Standard
Consider that 
\begin_inset Formula $|N(\omega)|$
\end_inset

 remains constant at a previously encountered minima and that the noise
 level has increased via an increase in 
\begin_inset Formula $|X(\omega)|$
\end_inset

.
 Then, because of the LPF in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Low-Pass-Filter-Input"

\end_inset

, 
\begin_inset Formula $|P(\omega)|$
\end_inset

 does not rise sharply, but slowly.
 Thus, 
\begin_inset Formula $|P(\omega)|$
\end_inset

 is slightly more than 
\begin_inset Formula $|N(\omega)|$
\end_inset

 and 
\begin_inset Formula $\frac{\left|N(\omega)\right|}{\left|P(\omega)\right|}$
\end_inset

 will have a value that is close to one.
 In the original form of noise subtraction in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:1"

\end_inset

, 
\begin_inset Formula $|X(\omega)|$
\end_inset

 will continued to be subtracted by a very low 
\begin_inset Formula $|N(\omega)|$
\end_inset

 while the noise level has risen.
 This causes the increased noise to not be filtered, and can cause musical
 noise.
 In 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:eq2"

\end_inset

, this will result in a faster reduction in noise as 
\begin_inset Formula $|X(\omega)|$
\end_inset

 will be subtracted by a larger value.
 A numerical example of this happening is illustrated in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "tab:g-w-numerical"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Wrap table
lines 12
placement O
overhang 0in
width "50col%"
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $|N(\omega)|=0.1,|X(\omega)|=0.9$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $|X(\omega)|-|N(\omega)|=0.8$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $|P(\omega)|$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $|X(\omega)|-|X(\omega)|\frac{||N(\omega)|}{|P(\omega)|}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.45
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.675
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.72
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.75
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.771429
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.7875
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.8
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:g-w-numerical"

\end_inset

Numerical example depicting the noise subtraction during an increase in
 the noise level.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
However, as time goes by and 
\begin_inset Formula $P(\omega)$
\end_inset

 increases, 
\begin_inset Formula $\frac{\left|N(\omega)\right|}{\left|P(\omega)\right|}\rightarrow|N(\omega)|$
\end_inset

 as 
\begin_inset Formula $|P(\omega)|\rightarrow1$
\end_inset

.
 This means that, given sufficient time, 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:eq2"

\end_inset

 will perform as badly, or even worse as 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:1"

\end_inset

 in the event of a noise increase.
 Thus, the time constant 
\begin_inset Formula $\tau$
\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:lpf-input"

\end_inset

 can be increased to slow down this process so that eventually when the
 noise buffer described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Noise-Spectrum-Estimation"

\end_inset

 rotates, the old value will be discarded.
 Alternatively, the time interval in which the minimum noise is estimated
 across can be reduced.
\end_layout

\begin_layout Subsubsection
Evaluation
\end_layout

\begin_layout Standard
The caveat with this enhancement is that 
\begin_inset Formula $|P(\omega)|$
\end_inset

 is unable to distinguish speech from noise, and thus will cause some of
 the speech to be removed as well.
\end_layout

\begin_layout Standard
The output with this enhancement implemented can be seen in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:spec-enhancement6"

\end_inset

.
 When compared with the results from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:spec-enhancement-2"

\end_inset

, it can be seen that more noise (and musical noise) has been removed.
 It can be noted that the noise in the period 11-12.5 s when the speaker
 has paused his speech is almost fully removed.
 However, it is also observed that some of the speech has also been removed,
 resulting in a slightly slurry voice.
 
\end_layout

\begin_layout Subsection
Frame lengths
\end_layout

\begin_layout Standard
In general, frame lengths should be of powers of two so that the Fast Fourier
 Transform (FFT) used for DFT can be the most efficient.
 The frame length can be increased to give a better frequency resolution
 when doing the DFT of the samples.
 This would give a more granular approach in processing the frequency bins.
 However, this comes at the expense of temporal resolution, although it
 is not as important in this system.
 Due to the use of the frame processing structure described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Frame-Processing-Implementation"

\end_inset

, there is a 1.25 frame delay between the input and output, and increasing
 the frame length will increase the time delay more.
 The increase in frame length will also cause more processing to be done
 per frame, and if the increased processing takes up more time than the
 frame time interval, it would cause 
\begin_inset Quotes eld
\end_inset

clicking
\begin_inset Quotes erd
\end_inset

 to be heard in the final output.
 The increase in frame length would also increase the heap memory used,
 and the limited memory would be a limiting factor.
\end_layout

\begin_layout Standard
Through experimentation, it was found that increasing the frame length did
 not yield much noticeable improvements.
 Reducing the frame length caused a degradation in the filter quality, as
 the frequency resolution would be reduced.
 It is noted that a frame length of 256 provides sufficient granularity
 for a sampling rate of 8 kHz.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
time resolution vs frequency resolution (and memory/computation)
\end_layout

\begin_layout Plain Layout
I think that because the filter has already 3s lag or so, going from 32
 to 64 ms frame length is not a significant time domain loss.
\end_layout

\begin_layout Plain Layout
From experimentation, no significant difference between 256 and 512 observed
 though
\end_layout

\begin_layout Plain Layout
http://electronics.stackexchange.com/questions/12407/what-is-the-relation-between-
fft-length-and-frequency-resolution
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Dynamic Oversubtraction
\end_layout

\begin_layout Standard
<enh6?>
\end_layout

\begin_layout Standard
the main spectral content of human speech can be assumed to be between 50
 and 8000 Hz.
 
\end_layout

\begin_layout Standard
Therefore one possible improvement is to oversubtract 0-50 Hz band even
 further.
\end_layout

\begin_layout Standard
We also explored completely zeroing the 0-50 Hz band, results were <ok?
 do a quick test>
\end_layout

\begin_layout Standard
When listening to filtering of 
\begin_inset Quotes eld
\end_inset

car1.wav
\begin_inset Quotes erd
\end_inset

 corrupted signal with a pair of high quality headphones, the low frequency
 components could actually be heard leaking into the signal.
 This additional oversubtraction helped combat this effect.
\end_layout

\begin_layout Subsection
Residual Noise Reduction
\end_layout

\begin_layout Subsection
Changing the Noise Estimation Period
\end_layout

\begin_layout Standard
The noise estimation window described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Noise-Spectrum-Estimation"

\end_inset

 can be reduced to allow the noise filter to react faster to sharp changes
 (especially increase) in noise level.
 This will also allow the alternate 
\begin_inset Formula $G(\omega)$
\end_inset

 calculation described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:alt-gw"

\end_inset

 to perform better due to the faster rotation of the noise buffers.
 However, if the speaker does not pause speaking at least once every four
 seconds, the speaker's voice at its lowest level will be taken as noise
 and then erroneously subtracted from the spectrum.
 
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
quicker tracking vs potentially filtering voice out if it stays audible
 for long periods of time,
\end_layout

\begin_layout Plain Layout
quicker tracking -> more relevant noise pattern -> better filtering for
 changing noise
\end_layout

\begin_layout Plain Layout
<elaborate on trade-off?>
\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Final-Implementation"

\end_inset

Final Implementation
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Further possible ideas"

\end_inset

Further ideas
\end_layout

\begin_layout Standard
- as in mobile telephony, when new signal starts (i.e.
 call connected), use the first noise estimates to overwrite all MNB buffers
 to start tracking the noise instantly (instead of the noise buffer period
 lag)
\end_layout

\begin_layout Standard
- since we know the speaker in advance, we can have a filter that can be
 trained to track particular speaker's speech components.
 In a mobile phone, it'd be sensible to have a model of the user's voice.
\end_layout

\begin_layout Standard
- Markovian models for noise tracking?
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\start_of_appendix
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{alph} 
\backslash
setcounter{page}{1}
\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Project-Code"

\end_inset

Project Code
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "RTDSP/enhance.c"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "resources/ref"
options "bibtotoc,agsm"

\end_inset


\end_layout

\end_body
\end_document
